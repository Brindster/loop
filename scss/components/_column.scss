/**
 * Columns
 */

$column-gap: 2.6rem !default;
$column-system: 12 !default;
$use-column-offset: true !default;
$column-gaps: (
    'less' : 0,
    'tiny' : 1rem,
    'small': 2rem
) !default;

// none modifiable
$column-gap-half: ($column-gap / 2);

.container {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    padding-right: $column-gap;
    padding-left: $column-gap;
    width: 100%;

    @each $breakpoint, $size in $breakpoints {
        @include breakpoint($breakpoint) {
            max-width: $size;
        }
    }

    &.-fluid { max-width: map-get($breakpoints, 'lg') !important; }
}

.row {
    margin-right: ($column-gap-half * -1);
    margin-left: ($column-gap-half * -1);
    margin-bottom: ($column-gap * -1);

    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;

    & + .row {
        margin-top: $column-gap;
    }

    //.--reverse { flex-direction: row-reverse; }
}

.column {
    // column base
    @for $i from 0 through $column-system {
        $selector: if($i>0,-#{$i}, '');

        &#{$selector} {
            padding-right: $column-gap-half;
            padding-left: $column-gap-half;
            padding-bottom: $column-gap;

            flex: 0 0 auto;
            flex-grow: 1;
            max-width: 100%;
        }

        @if $i > 0 {
            &#{$selector} {
                flex-basis: percentage($i/$column-system);
                max-width: percentage($i/$column-system);
            }
            // if we import $column-offset
            @if $use-column-offset == true {
                &.-offset#{$selector} {
                    margin-left: percentage($i/$column-system);
                }
            }
        }
    }

    @each $breakpoint, $size in $breakpoints {
        @for $i from 1 through $column-system {
            @include breakpoint($breakpoint) {
                &.-#{$breakpoint}-#{$i} {
                    flex-basis: percentage($i/$column-system);
                    max-width: percentage($i/$column-system);
                }
                // if we import $column-offset
                @if $use-column-offset == true {
                    &.-#{$breakpoint}-offset-#{$i} {
                        margin-left: percentage($i/$column-system);
                    }
                }
            }
        }
    }

    &.-slim { flex-grow: 0}
}

.-gap {
    @each $gap-name, $gap-size in $column-gaps {
        $gap-size-half: ($gap-size / 2);
        &-#{$gap-name}.row {
            margin-right: ($gap-size-half * -1);
            margin-left: ($gap-size-half * -1);
            margin-bottom: ($gap-size * -1);

            & + .row { margin-top: $gap-size }

            .col {
                padding-right: $gap-size-half;
                padding-left: $gap-size-half;
                padding-bottom: $gap-size;
            }
        }
    }
}
